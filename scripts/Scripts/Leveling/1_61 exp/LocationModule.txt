unit LocationModule;

interface

uses SysUtils, Classes, Functions, UserFunctions;

type
	TCity = (DWARVEN = 0, ORC = 1, DARK_ELVEN = 2, ELVEN = 3, KAMAEL = 4,
	TALKING_ISLAND = 5, HEINE = 6, DION = 7, GIRAN = 8, ADEN = 9, GODDARD = 10,
	GLUDIO = 11, GLUDIN = 12, SHTUTTGART = 13, RUNE = 14, OREN = 15, HUNTER = 16, NON_CITY = 17);
	TFarmZone = record
		range: integer;
		mili: integer;
	end;	
	
	TCity2 = record
		Enum: TCity;
		ID: integer;
		Name: String;
		gateKeeperID: integer;
		supplyManagerID: integer;
		newbieBufferID: integer;
		pathToBuffer: DimensionArray;
		pathToSupply: DimensionArray;
		GateKeepersString: String;
	end;

const
	TCities : array[0..17] of TCity = (DWARVEN, ORC, DARK_ELVEN, ELVEN, KAMAEL,
	TALKING_ISLAND, HEINE, DION, GIRAN, ADEN, GODDARD,
	GLUDIO, GLUDIN, SHTUTTGART, RUNE, OREN, HUNTER, NON_CITY);
	
	GkDlg  = 'Телепортироваться';
	//GkDlg  = 'Телепортация';
	CityNames : array[0..16] of string = ('dwarven village','orc village','dark elf village','elf village','kamael village','talking island',
	'heine','dion','giran','aden','goddard','gludio','gludin','schuttgart','rune','oren','hunter village');

	GateKeepers1 : array[0..16] of integer = (30540, 30576, 30134, 30146, 32163, 30006, 30899, 30059, 30080, 30848, 31275, 30256, 30320, 31694, 31320, 30177, 30233);
	GateKeepers : array[0..16] of integer = (50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124, 50124);
	TPDelay = 1000;
	GateKeepersStrings   : array[0..16] of string = (
		'gludio,schuttgart,"dark elf village","talking island","elf village","orc village","kamael village","abandoned coal mines","eastern mining zone","western mining zone","mithril mines w","mithril mines e"', //dwarven
		'gludio,schuttgart,"dark elf village","dwarven village","talking island","elf village","kamael village","immortal plateau","cave of trials","fozen waterfall"', //orc
		'gludio,"dwarven village","talking island","orc village","kamael village","dark forest","swampland","spider nest","neutral zone"', //darkelven
		'gludio,"dwarven village","talking island","orc village","kamael village","elven forest","elven fortress","neutral zone"', //elven
		'gludio,aden,"talking island","dark elf village","elf village","ofc village","stronghold 1","stronghold 2","stronghold 3","isle of souls harbor"', //kamael
		'gludin,"dark elf village","dwarven village","elf village","orc village","kamael village","elven ruins","singing waterfall","northen territory","obelisk of victory"', //talking island
		'giran,oren,dion,aden,goddard,rune,schuttgart,gludio,"giran harbor","field of silence","field of whispers","alligator island","garden of eva","isle of prayer"', //heine
		'giran,heine,gludio,goddard,rune,schuttgart,aden,oren,"cruma marshland","cruma tower","fortress of resistance","plains of dion","bee hive","tanor canyon"', //dion
		'oren,heine,dion,goddard,rune,schuttgart,gludio,aden,"giran harbor","hardins private academy","devils isle","breka stronghold"', //giran
		'goddard,oren,giran,heine,schuttgart,dion,gludio,rune,"kamael village","hunter village","coliseum","forsaken plains","seal of shilen","forest of mirrors","blazing swamp","field of massacre","ancient battleground","silent valley","tower of insolence","giant cave"', //aden
		'gludio,giran,dion,rune,heine,schuttgart,aden,oren,"varka","ketra","hot springs","wall of argos","monastery of silence","forge of gods"', //goddard
		'schuttgart,heine,aden,oren,dion,goddard,giran,rune,gludin,"elf village","dark elf village","dwarven village","orc village","kamael village","ruins of agony","ruins of despair","ant nest","windawood manor"', //gludio
		'gludio,"talking island","elf village","dark elf village","dwarven village","orc village","kamael village","langk lizardman dwellings","windmill hill","fellmere harvesting grounds","forgotten temple","orc barracks","windy hill",wasteland,"red rock ridge"', //gludin
		'rune,goddard,aden,oren,heine,giran,dion,gludio,"orc village","dwarven village","den of evil","plunderous plains","iceman hat","crypts of disgrace","pavel ruines","mithril mines"', //schuttgart
		'goddard,gludio,giran,dion,heine,schuttgart,aden,oren,"wild beast pastues","valley of saints","forest of the dead","swamp of screams","monasterty of silence","stakato nest","primeval isle wharf"', //rune
		'aden,giran,rune,goddard,heine,dion,schuttgart,gludio,"ivory tower","hunter village","hardins private academy","sel mahum west","sel mahum south","sel mahum center","plains of the lizardmen","outlaw forest","sea of spores"', //oren
		'aden,oren,"hardins private academy","enchanted valley south","enchanted valley north","forest of mirrors","dragon valley","antharas lair","ivory tower"' //hunter
	);
	nbArr : array[0..8] of integer = (30598, 30599, 30600, 30601, 30602, 32135, 31076, 31077, 32327);
	spArr : array[0..16] of integer = (30519, 30561, 30137, 30150, 32167, 30004, 30893, 30063, 30081, 30893, 31263, 30254, 30313, 31952, 31307, 30180, 30301);

var
	language: boolean = false;
	talkingIslandToBuffer: DimensionArray;
	heineToBuffer: DimensionArray;
	dionToBuffer: DimensionArray;
	giranToBuffer: DimensionArray;
	adenToBuffer: DimensionArray;
	goddardToBuffer: DimensionArray;
	gludioToBuffer: DimensionArray;
	gludinToBuffer: DimensionArray;
	shtuttgartToBuffer: DimensionArray;
	runeToBuffer: DimensionArray;
	orenToBuffer: DimensionArray;
	kamaelToBuffer: DimensionArray;
	
	talkingIslandToSupply: DimensionArray;
	heineToSupply: DimensionArray;
	dionToSupply: DimensionArray;
	giranToSupply: DimensionArray;
	adenToSupply: DimensionArray;
	goddardToSupply: DimensionArray;
	gludioToSupply: DimensionArray;
	gludinToSupply: DimensionArray;
	shtuttgartToSupply: DimensionArray;
	runeToSupply: DimensionArray;
	orenToSupply: DimensionArray;
	kamaelToSupply: DimensionArray;
	
	giranToWeaponShop: DimensionArray;
	giranToAccessoryShop: DimensionArray;
	giranToArmorShop: DimensionArray;


	function GetCity(shouldGoHome: boolean = true; inCityEvt: boolean = false): TCity;
	procedure GoHome(ItemID: integer = -1; skillID: integer = -1; Val: boolean = false);
	procedure InCity;
	function DoTeleport(TeleportValue: String): boolean;
	function DoTeleportToLocation(TeleportValue: String): boolean;
	function isRightCity(val: TCity; shouldGoHome: boolean = true): boolean;
	function toRightCity(val: TCity): boolean;
	function inStartLoc: boolean;
	function getNewbieBuffer: TL2Live;
	function getSupplyManager: TL2Live;
	procedure GetBuff;
	procedure GetSupplies;
	procedure initBuffPathArrays;
	function getNewbieQuest: boolean;
	
	function getCityToLocationGK(teleportName: string): integer;

implementation

function GetCity; //todo hunter, dark elv, 
var
	City : TCity;
begin
	City := NON_CITY;
	if User.InRange(-83139,243145,User.Z,5000,10) then City := TALKING_ISLAND;
	if User.InRange(116569,-179848,User.Z,7000,10) then City := DWARVEN;
	if User.InRange(-118184, 46024, User.Z, 7000, 10) then City := KAMAEL;
	if User.InRange(44904, 49800, User.Z, 7000, 10) then City := ELVEN;
	if User.InRange(-45080, -113576, User.Z, 5000, 10) then City := ORC;
	if User.InRange(111434,220426,User.Z,5000,10)  then City := HEINE;
	if User.InRange(18591,144708,User.Z,5000,10)   then City := DION;
	if User.InRange(82876,148960,User.Z,5000,10)   then City := GIRAN;
	if User.InRange(147509,25928,User.Z,5000,10)   then City := ADEN;
	if User.InRange(147713,-56202,User.Z,5000,10)  then City := GODDARD;
	if User.InRange(-14236,123701,User.Z,5000,10)  then City := GLUDIO;
	if User.InRange(-81311,152663,User.Z,5000,10)  then City := GLUDIN;
	if User.InRange(88041,-142502,User.Z,5000,10)  then City := SHTUTTGART;
	if User.InRange(117144, 76824,User.Z,5000,10)  then City := HUNTER;
	if User.InRange(11416, 16856,User.Z,5000,10)  then City := DARK_ELVEN;
	if User.InRange(43838,-48222,User.Z,5000,10) or User.InRange(38283,-48102,User.Z,5000,10) then City := RUNE;
	if User.InRange(81150,54880,User.Z,5000,10)    then City := OREN;
	if (City = NON_CITY) and (shouldGoHome) then
	begin
		GoHome(-1, -1, inCityEvt);
		City := GetCity;
	end;
	Result := City;
end;

procedure GoHome;
var
	Skill: TL2Skill;
	Item: TL2Item;
begin
  if not User.Dead then
  begin
	if (itemID <> -1) and Inventory.User.ByID(itemID, Item) then
	begin
		Engine.UseItem(itemID);
		delay(100);
		delay(User.Cast.EndTime + 100);
	end;

	if (skillID <> -1) and (itemID = -1) and SkillList.ByID(skillID, Skill) then
	begin
		Engine.UseSkill(skillID);
		delay(100);
		delay(User.Cast.EndTime + 100);
	end;
	
	if (skillID = -1) and (itemID = -1) and Inventory.User.ByID(10650, Item) then
	begin
		Engine.UseItem(Item); //Свиток телепорта
		delay(10 * 1000);
	end;
	
	if (skillID = -1) and (itemID = -1) and not Inventory.User.ByID(736, Item) then
	begin
		delay(100);
		delay(5 * 60 * 1000);
	end;
  end else
	Engine.GoHome;

  Delay(5 * 1000);
  if Val then
	InCity;
end;

//Пушествия от места появления в городе до гейткипера города.
procedure InCity;
var
	City: TCity;
	Moved : Boolean;
	NPC: TL2Npc;
	NewResp : TStringList;
begin
  City := GetCity;
  //talking island
  if City = TALKING_ISLAND then begin
    if User.InRange(-84376,242824,-3712, 3000, 150) then begin
      Engine.MoveTo(-84184, 243448, -3712);
      Engine.MoveTo(-84280, 243800, -3712);
      Engine.MoveTo(-84552, 244040, -3712);
      Engine.MoveTo(-84184, 244504, -3712);
    end;
    if User.InRange(-84200, 244488, -3728, 500, 150) then Moved := true;
  end;
  //heine
  if City = HEINE then begin
    if User.InRange(110912,219584,-3664, 250, 150) then begin
      Engine.MoveTo(110912,219584,-3664);
      Engine.MoveTo(111154,219735,-3675);
      Engine.MoveTo(111176,219395,-3546);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(111888,219584,-3664, 250, 150) then begin
      Engine.MoveTo(111888,219584,-3664);
      Engine.MoveTo(111617,219703,-3674);
      Engine.MoveTo(111591,219371,-3544);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(112064,219792,-3664, 250, 150) then begin
      Engine.MoveTo(112064,219792,-3664);
      Engine.MoveTo(111665,219800,-3675);
      Engine.MoveTo(111580,219329,-3544);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(107808,217856,-3672, 250, 150) then begin
      Engine.MoveTo(107808,217856,-3672);
      Engine.MoveTo(107769,217524,-3673);
      Engine.MoveTo(109387,217509,-3747);
      Engine.MoveTo(110037,217257,-3747);
      Engine.MoveTo(110072,219029,-3477);
      Engine.MoveTo(111202,219130,-3541);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(110896,220768,-3664, 250, 150) then begin
      Engine.MoveTo(110896,220768,-3664);
      Engine.MoveTo(111191,219621,-3663);
      Engine.MoveTo(111190,219303,-3544);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(110768,219824,-3664, 250, 150) then begin
      Engine.MoveTo(110768,219824,-3664);
      Engine.MoveTo(111163,219763,-3671);
      Engine.MoveTo(111199,219319,-3544);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(112112,220576,-3664, 250, 150) then begin
      Engine.MoveTo(112112,220576,-3664);
      Engine.MoveTo(111600,219666,-3669);
      Engine.MoveTo(111586,219305,-3544);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(110688,220576,-3664, 250, 150) then begin
      Engine.MoveTo(110688,220576,-3664);
      Engine.MoveTo(111183,219655,-3669);
      Engine.MoveTo(111201,219292,-3544);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(108032,218048,-3672, 250, 150) then begin
      Engine.MoveTo(108032,218048,-3672);
      Engine.MoveTo(107862,218003,-3673);
      Engine.MoveTo(107840,217532,-3673);
      Engine.MoveTo(109383,217465,-3747);
      Engine.MoveTo(110036,217280,-3747);
      Engine.MoveTo(110096,219040,-3478);
      Engine.MoveTo(111086,219100,-3541);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(107568,218256,-3672, 250, 150) then begin
      Engine.MoveTo(107568,218256,-3672);
      Engine.MoveTo(107542,217872,-3673);
      Engine.MoveTo(107840,217532,-3673);
      Engine.MoveTo(109383,217465,-3747);
      Engine.MoveTo(110036,217280,-3747);
      Engine.MoveTo(110096,219040,-3478);
      Engine.MoveTo(111086,219100,-3541);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(107552,218000,-3672, 250, 150) then begin
      Engine.MoveTo(107552,218000,-3672);
      Engine.MoveTo(107862,218003,-3673);
      Engine.MoveTo(107840,217532,-3673);
      Engine.MoveTo(109383,217465,-3747);
      Engine.MoveTo(110036,217280,-3747);
      Engine.MoveTo(110096,219040,-3478);
      Engine.MoveTo(111086,219100,-3541);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(111856,220752,-3664, 250, 150) then begin
      Engine.MoveTo(111856,220752,-3664);
      Engine.MoveTo(111573,219730,-3675);
      Engine.MoveTo(111589,219342,-3544);
      Engine.MoveTo(111387,219387,-3544);
    end;
    if User.InRange(111387,219387,-3544, 250, 150) then Moved := true;
  end;
  //dion
  if City = DION then begin
    if User.InRange(19134,144847,-3096, 250, 150) then begin
      Engine.MoveTo(19134,144847,-3096);
      Engine.MoveTo(18041,144052,-3057);
      Engine.MoveTo(16727,144111,-2980);
      Engine.MoveTo(15933,143331,-2771);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(18954,144428,-3096, 250, 150) then begin
      Engine.MoveTo(18954,144428,-3096);
      Engine.MoveTo(18600,144387,-3070);
      Engine.MoveTo(17733,143924,-3037);
      Engine.MoveTo(16711,144167,-2980);
      Engine.MoveTo(16622,144034,-2932);
      Engine.MoveTo(15963,143381,-2784);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(19012,145140,-3120, 250, 150) then begin
      Engine.MoveTo(19012,145140,-3120);
      Engine.MoveTo(19021,145126,-3123);
      Engine.MoveTo(17600,145497,-3079);
      Engine.MoveTo(16468,144129,-2964);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(19613,145607,-3104, 250, 150) then begin
      Engine.MoveTo(19613,145607,-3104);
      Engine.MoveTo(17638,145591,-3084);
      Engine.MoveTo(16214,143659,-2863);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(18576,145136,-3104, 250, 150) then begin
      Engine.MoveTo(18576,145136,-3104);
      Engine.MoveTo(17727,145541,-3082);
      Engine.MoveTo(16414,144174,-2969);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(17398,145456,-3048, 250, 150) then begin
      Engine.MoveTo(17398,145456,-3048);
      Engine.MoveTo(17727,145541,-3082);
      Engine.MoveTo(16414,144174,-2969);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(17144,145055,-3024, 250, 150) then begin
      Engine.MoveTo(17144,145055,-3024);
      Engine.MoveTo(16350,143905,-2923);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(18078,145925,-3112, 250, 150) then begin
      Engine.MoveTo(18078,145925,-3112);
      Engine.MoveTo(16559,144353,-2987);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(19150,143941,-3056, 250, 150) then begin
      Engine.MoveTo(19150,143941,-3056);
      Engine.MoveTo(18112,145633,-3104);
      Engine.MoveTo(17108,145059,-3031);
      Engine.MoveTo(16469,144176,-2969);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(18512,145536,-3120, 250, 150) then begin
      Engine.MoveTo(18512,145536,-3120);
      Engine.MoveTo(17226,145360,-3048);
      Engine.MoveTo(16419,143955,-2935);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(18717,145711,-3080, 250, 150) then begin
      Engine.MoveTo(18717,145711,-3080);
      Engine.MoveTo(17226,145360,-3048);
      Engine.MoveTo(16419,143955,-2935);
      Engine.MoveTo(15628,142920,-2704);
    end;
    if User.InRange(15628,142920,-2704, 250, 150) then Moved := true;
  end;
  //giran
  if CITY = giran then begin
    if User.InRange(81376,148095,-3464, 250, 150) then begin
      Engine.MoveTo(81376,148095,-3464);
      Engine.MoveTo(81881,148025,-3467);
      Engine.MoveTo(83027,148020,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(82292,149450,-3464, 250, 150) then begin
      Engine.MoveTo(82292,149450,-3464);
      Engine.MoveTo(82865,148876,-3467);
      Engine.MoveTo(83054,148281,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(81562,147782,-3464, 250, 150) then begin
      Engine.MoveTo(81562,147782,-3464);
      Engine.MoveTo(82284,148077,-3467);
      Engine.MoveTo(83077,148159,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(83409,148578,-3400, 250, 150) then begin
      Engine.MoveTo(83409,148578,-3400);
      Engine.MoveTo(83427,148206,-3403);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(81440,149119,-3464, 250, 150) then begin
      Engine.MoveTo(81440,149119,-3464);
      Engine.MoveTo(82200,149222,-3467);
      Engine.MoveTo(82722,148485,-3467);
      Engine.MoveTo(83087,148101,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(82496,148095,-3464, 250, 150) then begin
      Engine.MoveTo(82496,148095,-3464);
      Engine.MoveTo(83092,148094,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(83473,149223,-3400, 250, 150) then begin
      Engine.MoveTo(83473,149223,-3400);
      Engine.MoveTo(83355,148728,-3403);
      Engine.MoveTo(83358,148292,-3403);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(82272,147801,-3464, 250, 150) then begin
      Engine.MoveTo(82272,147801,-3464);
      Engine.MoveTo(82565,148080,-3467);
      Engine.MoveTo(83101,148099,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(82480,149087,-3464, 250, 150) then begin
      Engine.MoveTo(82480,149087,-3464);
      Engine.MoveTo(82623,148694,-3467);
      Engine.MoveTo(83087,148157,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(81637,149427,-3464, 250, 150) then begin
      Engine.MoveTo(81637,149427,-3464);
      Engine.MoveTo(82229,149197,-3467);
      Engine.MoveTo(82610,148669,-3467);
      Engine.MoveTo(83088,148170,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(81062,148144,-3464, 250, 150) then begin
      Engine.MoveTo(81062,148144,-3464);
      Engine.MoveTo(81574,147997,-3467);
      Engine.MoveTo(82302,147975,-3467);
      Engine.MoveTo(83070,148109,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(83426,148835,-3400, 250, 150) then begin
      Engine.MoveTo(83426,148835,-3400);
      Engine.MoveTo(83422,148276,-3403);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(81033,148883,-3464, 250, 150) then begin
      Engine.MoveTo(81033,148883,-3464);
      Engine.MoveTo(81769,149191,-3467);
      Engine.MoveTo(82322,149192,-3467);
      Engine.MoveTo(82622,148656,-3467);
      Engine.MoveTo(83079,148163,-3467);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(83415,148235,-3400, 250, 150) then begin
      Engine.MoveTo(83415,148235,-3400);
      Engine.MoveTo(83402,147946,-3403);
    end;
    if User.InRange(83402,147946,-3403,250,150) then Moved := true;
  end;
  //aden
  if CITY = ADEN then begin
    if User.inrange(146811,27109,-2231,500)  then begin
      Engine.MoveTo(146811,27109,-2231);
      Engine.MoveTo(147289,26926,-2229);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(146810,28059,-2294,500)  then begin
      Engine.MoveTo(146810,28059,-2294);
      Engine.MoveTo(146847,27874,-2294);
      Engine.MoveTo(147004,27611,-2294);
      Engine.MoveTo(147004,27611,-2294);
      Engine.MoveTo(147004,27611,-2232);
      Engine.MoveTo(147244,26822,-2230);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(145686,21112,-2167,500)  then begin
      Engine.MoveTo(145686,21112,-2167);
      Engine.MoveTo(145697,21616,-2167);
      Engine.MoveTo(145050,22609,-2167);
      Engine.MoveTo(145218,23947,-2167);
      Engine.MoveTo(146377,24455,-2039);
      Engine.MoveTo(146484,25685,-2039);
      Engine.MoveTo(147130,25700,-2039);
      Engine.MoveTo(147112,25921,-2039);
    end;
    if User.inrange(148076,27069,-2231,500)  then begin
      Engine.MoveTo(148076,27069,-2231);
      Engine.MoveTo(147666,27110,-2230);
      Engine.MoveTo(147308,26954,-2230);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(148949,21125,-2167,500)  then begin
      Engine.MoveTo(148949,21125,-2167);
      Engine.MoveTo(146122,21227,-2167);
      Engine.MoveTo(145697,21616,-2167);
      Engine.MoveTo(145050,22609,-2167);
      Engine.MoveTo(145218,23947,-2167);
      Engine.MoveTo(146377,24455,-2039);
      Engine.MoveTo(146484,25685,-2039);
      Engine.MoveTo(147130,25700,-2039);
      Engine.MoveTo(147112,25921,-2039);
    end;
    if User.inrange(144549,22828,-2167,500)  then begin
      Engine.MoveTo(144549,22828,-2167);
      Engine.MoveTo(145697,21616,-2167);
      Engine.MoveTo(145050,22609,-2167);
      Engine.MoveTo(145218,23947,-2167);
      Engine.MoveTo(146377,24455,-2039);
      Engine.MoveTo(146484,25685,-2039);
      Engine.MoveTo(147130,25700,-2039);
      Engine.MoveTo(147112,25921,-2039);
    end;
    if User.inrange(144543,24666,-2167,500)  then begin
      Engine.MoveTo(144543,24666,-2167);
      Engine.MoveTo(145279,24307,-2167);
      Engine.MoveTo(146377,24455,-2039);
      Engine.MoveTo(146484,25685,-2039);
      Engine.MoveTo(147130,25700,-2039);
      Engine.MoveTo(147112,25921,-2039);
    end;
    if User.inrange(146497,30582,-2487,500)  then begin
      Engine.MoveTo(146497,30582,-2487);
      Engine.MoveTo(147058,30323,-2487);
      Engine.MoveTo(147427,29959,-2487);
      Engine.MoveTo(147427,29339,-2295);
      Engine.MoveTo(147373,28351,-2294);
      Engine.MoveTo(147100,27643,-2294);
      Engine.MoveTo(147246,26930,-2230);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(144648,29158,-2487,500)  then begin
      Engine.MoveTo(144648,29158,-2487);
      Engine.MoveTo(144966,28868,-2487);
      Engine.MoveTo(145110,27659,-2295);
      Engine.MoveTo(146220,27622,-2231);
      Engine.MoveTo(147108,27272,-2231);
      Engine.MoveTo(147224,26929,-2230);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(150247,29109,-2487,500)  then begin
      Engine.MoveTo(150247,29109,-2487);
      Engine.MoveTo(149921,28836,-2487);
      Engine.MoveTo(149859,28063,-2339);
      Engine.MoveTo(149776,27675,-2295);
      Engine.MoveTo(148731,27683,-2231);
      Engine.MoveTo(148224,27383,-2231);
      Engine.MoveTo(147306,26932,-2230);
    end;
    if User.inrange(147848,30309,-2487,500)  then begin
      Engine.MoveTo(147848,30309,-2487);
      Engine.MoveTo(147677,30089,-2487);
      Engine.MoveTo(147462,29870,-2447);
      Engine.MoveTo(147462,29413,-2295);
      Engine.MoveTo(147335,28272,-2294);
      Engine.MoveTo(147108,27664,-2294);
      Engine.MoveTo(147194,26961,-2229);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(144651,26680,-2295,500)  then begin
      Engine.MoveTo(144651,26680,-2295);
      Engine.MoveTo(144681,27050,-2294);
      Engine.MoveTo(144936,27135,-2295);
      Engine.MoveTo(145145,27605,-2295);
      Engine.MoveTo(146182,27682,-2231);
      Engine.MoveTo(146921,27360,-2231);
      Engine.MoveTo(147218,26948,-2229);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(148557,30461,-2487,500)  then begin
      Engine.MoveTo(148557,30461,-2487);
      Engine.MoveTo(148114,30076,-2487);
      Engine.MoveTo(147453,30049,-2487);
      Engine.MoveTo(147474,29710,-2368);
      Engine.MoveTo(147397,28461,-2294);
      Engine.MoveTo(147044,27389,-2231);
      Engine.MoveTo(147242,26823,-2230);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.inrange(147971,27982,-2294,500)  then begin
      Engine.MoveTo(147971,27982,-2294);
      Engine.MoveTo(147846,27354,-2231);
      Engine.MoveTo(147265,26878,-2230);
      Engine.MoveTo(147267,26400,-2185);
      Engine.MoveTo(147266,26195,-2103);
      Engine.MoveTo(147250,25969,-2039);
      Engine.MoveTo(147206,25899,-2039);
      Engine.MoveTo(147138,25906,-2039);
    end;
    if User.InRange(147138,25906,-2039,250,150) then Moved := true;
  end;
  //goddard
  if CITY = GODDARD then begin
    if User.InRange(146272, -58176, -2976, 250, 150) then begin //возле хранилища
      Engine.MoveTo(147593, -58103, -3007);
      Engine.MoveTo(147727, -57141, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(145264, -57680, -2976, 250, 150) then begin //возле хранилища 2
      Engine.MoveTo(145588, -56926, -3007);
      Engine.MoveTo(146673, -56095, -2807);
      Engine.MoveTo(147543, -56054, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(145696, -57696, -2976, 250, 150) then begin //возле хранилища 3
      Engine.MoveTo(145510, -56930, -3007);
      Engine.MoveTo(146499, -56202, -2807);
      Engine.MoveTo(147481, -56031, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(144944, -55392, -2976, 250, 150) then begin //самый край
      Engine.MoveTo(145153, -56813, -3007);
      Engine.MoveTo(145569, -56855, -3007);
      Engine.MoveTo(146467, -56271, -2807);
      Engine.MoveTo(147566, -56034, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(144752, -56752, -2976, 250, 150) then begin //самый край
      Engine.MoveTo(145534, -56884, -3007);
      Engine.MoveTo(146265, -56418, -2807);
      Engine.MoveTo(147407, -56063, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    //восточная лестница
    if User.InRange(149120, -58064, -2976, 250, 150 )then begin //магазин
      Engine.MoveTo(147706, -58107, -3007);
      Engine.MoveTo(147751, -56737, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(150400, -56752, -2976, 250, 150) then begin //самый край
      Engine.MoveTo(149935, -56870, -3007);
      Engine.MoveTo(149139, -56390, -2807);
      Engine.MoveTo(147929, -56063, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(150704, -55744, -2976, 250, 150) then begin //самый край 2
      Engine.MoveTo(149935, -56870, -3007);
      Engine.MoveTo(149139, -56390, -2807);
      Engine.MoveTo(147929, -56063, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    //северная лелтница
    if User.InRange(147680, -58208, -2976, 250, 150) then begin //низ центр лестницы
      Engine.MoveTo(147727, -57141, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(148288, -58304, -2976, 250, 150) then begin //низ центр лестницы чуть правее
      Engine.MoveTo(147738, -58050, -3007);
      Engine.MoveTo(147727, -57141, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(147232, -58480, -2976, 250, 150) then begin  //низ центр лестницы чуть левее
      Engine.MoveTo(147677, -58063, -3007);
      Engine.MoveTo(147727, -57141, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(149088, -56256, -2776, 250, 150) then begin
      Engine.MoveTo(147854, -56054, -2807);
      Engine.MoveTo(147934, -55354, -2760);
    end;
    //площадь
    if User.InRange(146832, -55904, -2776, 250, 150) then begin //площадь слева от лестницы
      Engine.MoveTo(147529, -56046, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(146368, -56256, -2776, 250, 150) then begin //площадь слева от лестницы 2
      Engine.MoveTo(147529, -56046, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(147664, -56464, -2776, 250, 150) then begin //площадь центр
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(147680, -56928, -2776, 250, 150) then begin //площадь центр 2
      Engine.MoveTo(147810, -56110, -2807);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(148560, -55904, -2776, 250, 150) then begin //площадь справа от лестницы
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(149872, -57424, -2976, 250, 150) then begin
      Engine.MoveTo(149897, -56910, -2979);
      Engine.MoveTo(149230, -56412, -2779);
      Engine.MoveTo(147939, -55999, -2772);
      Engine.MoveTo(147936, -55368, -2760);
    end;
    if User.InRange(144960, -56224, -2976, 250, 150) then begin
      Engine.MoveTo(145458, -56853, -2979);
      Engine.MoveTo(146343, -56326, -2779);
      Engine.MoveTo(147625, -55995, -2772);
      Engine.MoveTo(147936, -55368, -2760); //возле гк
    end;
    if User.InRange(144496, -55088, -2976, 250, 150) then begin
      Engine.MoveTo(145327, -56873, -2979);
      Engine.MoveTo(146337, -56445, -2779);
      Engine.MoveTo(147533, -55963, -2766);
      Engine.MoveTo(147936, -55368, -2760); //возле гк
    end;
    if User.InRange(145392, -56960, -2976, 250, 150) then begin
      Engine.MoveTo(146347, -56305, -2779);
      Engine.MoveTo(147514, -56003, -2772);
      Engine.MoveTo(147936, -55368, -2760); //возле гк
    end;
    if User.InRange(147936, -55368, -2760, 250, 150) then Moved :=  true;
  end;
  //gludio
  if CITY = GLUDIO then begin
    if User.InRange(-14704,122032,-3056, 250, 150) then begin
      Engine.MoveTo(-14704,122032,-3056);
      Engine.MoveTo(-14538,122671,-3116);
      Engine.MoveTo(-14599,123458,-3113);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-13709,123563,-3112, 250, 150) then begin
      Engine.MoveTo(-13709,123563,-3112);
      Engine.MoveTo(-14115,123802,-3119);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-14465,124434,-3120, 250, 150) then begin
      Engine.MoveTo(-14465,124434,-3120);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-13513,123752,-3112, 250, 150) then begin
      Engine.MoveTo(-13513,123752,-3112);
      Engine.MoveTo(-14245,123748,-3109);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-15564,123896,-3112, 250, 150) then begin
      Engine.MoveTo(-15564,123896,-3112);
      Engine.MoveTo(-14813,123869,-3124);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-14288,122752,-3112, 250, 150) then begin
      Engine.MoveTo(-14288,122752,-3112);
      Engine.MoveTo(-14525,123547,-3109);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-15314,124131,-3112, 250, 150) then begin
      Engine.MoveTo(-15314,124131,-3112);
      Engine.MoveTo(-14710,123973,-3122);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-14592,123232,-3112, 250, 150) then begin
      Engine.MoveTo(-14592,123232,-3112);
      Engine.MoveTo(-14510,124033,-3125);
    end;
    if User.InRange(-14510,124033,-3125, 250, 150) then Moved :=  true;
  end;
  //gludin
  if CITY = GLUDIN then begin
    if User.InRange(-82909,150357,-3120, 250, 150) then begin
      Engine.MoveTo(-82909,150357,-3120);
      Engine.MoveTo(-82293,150405,-3127);
      Engine.MoveTo(-81099,150292,-3048);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-83520,150560,-3120, 250, 150) then begin
      Engine.MoveTo(-83520,150560,-3120);
      Engine.MoveTo(-82640,150552,-3127);
      Engine.MoveTo(-81440,150392,-3127);
      Engine.MoveTo(-81054,150149,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-82195,150489,-3120, 250, 150) then begin
      Engine.MoveTo(-82195,150489,-3120);
      Engine.MoveTo(-81832,150490,-3101);
      Engine.MoveTo(-81023,150193,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-80053,154348,-3168, 250, 150) then begin
      Engine.MoveTo(-80053,154348,-3168);
      Engine.MoveTo(-80686,153974,-3176);
      Engine.MoveTo(-81784,153952,-3176);
      Engine.MoveTo(-83049,153943,-3176);
      Engine.MoveTo(-83023,152370,-3127);
      Engine.MoveTo(-82637,151293,-3127);
      Engine.MoveTo(-81296,150467,-3127);
      Engine.MoveTo(-81042,150263,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-82035,152647,-3168, 250, 150) then begin
      Engine.MoveTo(-82035,152647,-3168);
      Engine.MoveTo(-82975,152676,-3176);
      Engine.MoveTo(-82932,151752,-3127);
      Engine.MoveTo(-81276,150510,-3127);
      Engine.MoveTo(-81036,150260,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-83529,151205,-3120, 250, 150) then begin
      Engine.MoveTo(-83529,151205,-3120);
      Engine.MoveTo(-82130,150895,-3127);
      Engine.MoveTo(-81088,150361,-3044);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-81721,151202,-3120, 250, 150) then begin
      Engine.MoveTo(-81721,151202,-3120);
      Engine.MoveTo(-81403,150675,-3127);
      Engine.MoveTo(-81057,150318,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-82575,151025,-3120, 250, 150) then begin
      Engine.MoveTo(-82575,151025,-3120);
      Engine.MoveTo(-81540,150540,-3127);
      Engine.MoveTo(-80989,150147,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-84064,150864,-3120, 250, 150) then begin
      Engine.MoveTo(-84064,150864,-3120);
      Engine.MoveTo(-83114,150635,-3127);
      Engine.MoveTo(-81390,150478,-3127);
      Engine.MoveTo(-81017,150133,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-82241,151163,-3120, 250, 150) then begin
      Engine.MoveTo(-82241,151163,-3120);
      Engine.MoveTo(-81391,150602,-3127);
      Engine.MoveTo(-80999,150174,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-81787,150780,-3120, 250, 150) then begin
      Engine.MoveTo(-81787,150780,-3120);
      Engine.MoveTo(-81049,150378,-3042);
      Engine.MoveTo(-81073,150110,-3042);
    end;
    if User.InRange(-81073,150110,-3042, 250, 150) then Moved := true;
  end;
  //schuttgart
  if CITY = SHTUTTGART then begin
    if User.InRange(87184,-140256,-1536, 250, 150) then begin
      Engine.MoveTo(87184,-140256,-1536);
      Engine.MoveTo(87368,-140838,-1512);
      Engine.MoveTo(87319,-141796,-1338);
      Engine.MoveTo(87145,-142916,-1313);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(87408,-142304,-1336, 250, 150) then begin
      Engine.MoveTo(87408,-142304,-1336);
      Engine.MoveTo(87145,-142916,-1313);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(88240,-142736,-1336, 250, 150) then begin
      Engine.MoveTo(88240,-142736,-1336);
      Engine.MoveTo(87585,-142662,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(85056,-141328,-1528, 250, 150) then begin
      Engine.MoveTo(85056,-141328,-1528);
      Engine.MoveTo(85181,-141845,-1539);
      Engine.MoveTo(85804,-142279,-1339);
      Engine.MoveTo(87157,-142636,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(88624,-142480,-1336, 250, 150) then begin
      Engine.MoveTo(88624,-142480,-1336);
      Engine.MoveTo(87548,-142686,-1331);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(86400,-142672,-1336, 250, 150) then begin
      Engine.MoveTo(86400,-142672,-1336);
      Engine.MoveTo(87143,-142570,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(86560,-140320,-1536, 250, 150) then begin
      Engine.MoveTo(86560,-140320,-1536);
      Engine.MoveTo(87300,-140655,-1539);
      Engine.MoveTo(87385,-141436,-1339);
      Engine.MoveTo(87246,-142537,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(88448,-140512,-1536, 250, 150) then begin
      Engine.MoveTo(88448,-140512,-1536);
      Engine.MoveTo(87410,-140642,-1539);
      Engine.MoveTo(87299,-141493,-1338);
      Engine.MoveTo(87291,-142607,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(89712,-141472,-1528, 250, 150) then begin
      Engine.MoveTo(89712,-141472,-1528);
      Engine.MoveTo(89497,-141893,-1539);
      Engine.MoveTo(88963,-142272,-1339);
      Engine.MoveTo(87737,-142631,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(87344,-141696,-1336, 250, 150) then begin
      Engine.MoveTo(87344,-141696,-1336);
      Engine.MoveTo(87354,-142594,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(85472,-140752,-1536, 250, 150) then begin
      Engine.MoveTo(85472,-140752,-1536);
      Engine.MoveTo(85191,-141803,-1539);
      Engine.MoveTo(85909,-142322,-1338);
      Engine.MoveTo(87096,-142671,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(89360,-140944,-1536, 250, 150) then begin
      Engine.MoveTo(89360,-140944,-1536);
      Engine.MoveTo(89539,-141762,-1539);
      Engine.MoveTo(88910,-142276,-1339);
      Engine.MoveTo(87637,-142734,-1332);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(87776,-140384,-1536, 250, 150) then begin
      Engine.MoveTo(87776,-140384,-1536);
      Engine.MoveTo(87403,-140707,-1539);
      Engine.MoveTo(87351,-141645,-1338);
      Engine.MoveTo(87310,-142568,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(84720,-141936,-1536, 250, 150) then begin
      Engine.MoveTo(84720,-141936,-1536);
      Engine.MoveTo(85201,-141842,-1539);
      Engine.MoveTo(85807,-142262,-1339);
      Engine.MoveTo(87116,-142704,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(85968,-142384,-1336, 250, 150) then begin
      Engine.MoveTo(85968,-142384,-1336);
      Engine.MoveTo(87116,-142704,-1338);
      Engine.MoveTo(87070,-143418,-1290);
    end;
    if User.InRange(87070,-143418,-1290, 250, 150) then Moved :=  true;
  end;
  //rune
  if CITY = RUNE then begin
    if User.InRange(38608,-47168,896, 250, 150)
    or User.InRange(38272,-49008,896, 250, 150)
    or User.InRange(38752,-47792,896, 250, 150)
    or User.InRange(38112,-49792,896, 250, 150)
    or User.InRange(38848,-48640,896, 250, 150) then begin
      Engine.MoveTo(39113,-48225,898);
      Engine.MoveTo(38294,-48089,898);

      NpcList.ByID(31698,NPC); //Ариша
      Engine.SetTarget(NPC);
      Engine.DlgOpen;
      Engine.DlgSel(1);
      Engine.DlgSel(1);
      Engine.CancelTarget;
      Delay(3000);

      Engine.MoveTo(39522,-48234,-784);
      Engine.MoveTo(41591,-48221,-801);
      Engine.MoveTo(43323,-48185,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(44368,-50592,-792, 250, 150) then begin
      Engine.MoveTo(44368,-50592,-792);
      Engine.MoveTo(43997,-49427,-795);
      Engine.MoveTo(43831,-48480,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(44864,-47824,-792, 250, 150) then begin
      Engine.MoveTo(44864,-47824,-792);
      Engine.MoveTo(44025,-47893,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(43536,-50416,-792, 250, 150) then begin
      Engine.MoveTo(43536,-50416,-792);
      Engine.MoveTo(43833,-49293,-795);
      Engine.MoveTo(43847,-48397,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(45632,-47968,-792, 250, 150) then begin
      Engine.MoveTo(45632,-47968,-792);
      Engine.MoveTo(44070,-47930,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(45824,-49056,-792, 250, 150) then begin
      Engine.MoveTo(45824,-49056,-792);
      Engine.MoveTo(46022,-48351,-795);
      Engine.MoveTo(45441,-48000,-795);
      Engine.MoveTo(44189,-47900,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(44000,-49952,-792, 250, 150) then begin
      Engine.MoveTo(44000,-49952,-792);
      Engine.MoveTo(43862,-48669,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(43792,-48928,-792, 250, 150) then begin
      Engine.MoveTo(43792,-48928,-792);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(45072,-49936,-792, 250, 150) then begin
      Engine.MoveTo(45072,-49936,-792);
      Engine.MoveTo(44258,-49647,-795);
      Engine.MoveTo(43864,-48552,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(43408,-51120,-792, 250, 150) then begin
      Engine.MoveTo(43408,-51120,-792);
      Engine.MoveTo(43805,-49830,-795);
      Engine.MoveTo(43870,-48626,-795);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(43744,-47920,-792, 250, 150) then begin
      Engine.MoveTo(43744,-47920,-792);
      Engine.MoveTo(43827,-47698,-794);
    end;
    if User.InRange(43827,-47698,-794, 250, 150) then Moved :=  true;
  end;
  //oren
  if CITY = OREN then begin
    if User.InRange(80334,54400,-1552, 250, 150) then begin
      Engine.MoveTo(80334,54400,-1552);
      Engine.MoveTo(80969,53698,-1558);
      Engine.MoveTo(81540,53454,-1494);
      Engine.MoveTo(82480,53340,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82323,55466,-1520, 250, 150) then begin
      Engine.MoveTo(82323,55466,-1520);
      Engine.MoveTo(82403,54498,-1523);
      Engine.MoveTo(82589,53861,-1486);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82123,53535,-1488, 250, 150) then begin
      Engine.MoveTo(82123,53535,-1488);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(80304,56241,-1552, 250, 150) then begin
      Engine.MoveTo(80304,56241,-1552);
      Engine.MoveTo(81470,55682,-1523);
      Engine.MoveTo(82256,55294,-1523);
      Engine.MoveTo(82510,54035,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82445,56012,-1520, 250, 150) then begin
      Engine.MoveTo(82445,56012,-1520);
      Engine.MoveTo(82341,54950,-1523);
      Engine.MoveTo(82574,53833,-1486);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(80054,53209,-1552, 250, 150) then begin
      Engine.MoveTo(80054,53209,-1552);
      Engine.MoveTo(80624,53611,-1558);
      Engine.MoveTo(81772,53468,-1494);
      Engine.MoveTo(82289,53472,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(80513,52980,-1552, 250, 150) then begin
      Engine.MoveTo(80513,52980,-1552);
      Engine.MoveTo(80165,53065,-1558);
      Engine.MoveTo(80630,53610,-1558);
      Engine.MoveTo(81688,53447,-1494);
      Engine.MoveTo(82303,53338,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(80267,55497,-1552, 250, 150) then begin
      Engine.MoveTo(80267,55497,-1552);
      Engine.MoveTo(80359,54536,-1558);
      Engine.MoveTo(80792,53785,-1558);
      Engine.MoveTo(81495,53421,-1494);
      Engine.MoveTo(82323,53362,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(79933,55752,-1552, 250, 150) then begin
      Engine.MoveTo(79933,55752,-1552);
      Engine.MoveTo(80349,55208,-1558);
      Engine.MoveTo(80470,54217,-1558);
      Engine.MoveTo(81053,53602,-1558);
      Engine.MoveTo(81974,53465,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(80594,55837,-1552, 250, 150) then begin
      Engine.MoveTo(80594,55837,-1552);
      Engine.MoveTo(81899,55492,-1523);
      Engine.MoveTo(82240,55142,-1523);
      Engine.MoveTo(82531,53946,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82213,53964,-1488, 250, 150) then begin
      Engine.MoveTo(82213,53964,-1488);
      Engine.MoveTo(82668,53709,-1486);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(83327,55410,-1520, 250, 150) then begin
      Engine.MoveTo(83327,55410,-1520);
      Engine.MoveTo(82607,55592,-1523);
      Engine.MoveTo(82184,54809,-1523);
      Engine.MoveTo(82563,53882,-1488);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(79706,52986,-1552, 250, 150) then begin
      Engine.MoveTo(79706,52986,-1552);
      Engine.MoveTo(80427,53549,-1558);
      Engine.MoveTo(80812,53655,-1558);
      Engine.MoveTo(81979,53439,-1494);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82880,55390,-1520, 250, 150) then begin
      Engine.MoveTo(82880,55390,-1520);
      Engine.MoveTo(82375,55524,-1523);
      Engine.MoveTo(82367,54313,-1493);
      Engine.MoveTo(82651,53734,-1486);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82552,53447,-1488, 250, 150) then begin
      Engine.MoveTo(82552,53447,-1488);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82638,53885,-1488, 250, 150) then begin
      Engine.MoveTo(82638,53885,-1488);
      Engine.MoveTo(82950,53186,-1494);
    end;
    if User.InRange(82950,53186,-1494, 250, 150) then Moved :=  true;
  end;
  //Если в городе не произошло никаких движений.
  if not Moved then begin
    //NewResp := TStringList.Create;
    //if FileExists('File/Script/NewResp.txt') then NewResp.LoadFromFile('File/Script/NewResp.txt');
    //NewResp.Add(City+':'+IntToStr(User.X)+','+IntToStr(User.Y)+','+IntToStr(User.Z));
    //NewResp.SaveToFile('File/Script/NewResp.txt');
    //NewResp.Free;
    GoHome;
  end;
end;

function getCityToLocationGK;
var
	i: integer;
begin
	for i:=0 to 16 do
	begin
		if Pos(teleportName, GateKeepersStrings[i]) <> 0 then
		begin
			Result := i;
			exit;
		end;
	end;
	Result := -1;
end;

function DoTeleportToLocation;
begin
	Result := false;
	if toRightCity(TCities[getCityToLocationGK(TeleportValue)]) then
		Result := DoTeleport(TeleportValue);
end;

function DoTeleport;
var
	City: TCity;
	gkId: integer;
	cityIndex: integer;
	buffer: TL2Live;
	dialogIndex: integer;
	teleportIndex: TStringList;
begin
	teleportIndex := TStringList.Create;

	City := GetCity;
	cityIndex := Ord(City);

	if City = NON_CITY then
	begin
		Result := false;
		exit;
	end;

	gkId := GateKeepers[cityIndex];
	teleportIndex.Delimiter := ',';
	teleportIndex.DelimitedText := GateKeepersStrings[cityIndex];

	buffer := nil;

	NpcList.ById(gkId, buffer);

	if buffer = nil then
	begin
		Result := false;
		exit;
	end;

	dialogIndex := teleportIndex.indexOf(TeleportValue) + 1;
	print(dialogIndex);
	if dialogIndex = 0 then
	begin
		DoTeleportToLocation(TeleportValue);
		exit;
	end;
	
	if dialogIndex > 0 then
	begin
		Engine.SetTarget(buffer);
		Engine.MoveTo(buffer);
		Engine.DlgOpen;
		delay(500);
		if buffer.id = 30146 then
			Engine.DlgSel(1)	
		else
			Engine.DlgSel(ifThen((Pos(buffer.name, 'Ragara') <> 0), 'Teleport', GkDlg));
		delay(500);
		Engine.DlgSel(dialogIndex);
		Delay(3 * 1000);
		Result := true;
	end else
		Result := false;

	teleportIndex.Free;
end;

//по массиву строк телепортов ищем наш тп, он будет равен ид города
//делаем телепорт в город
//потом в ту хуетень


function isRightCity;
begin
  Result := (GetCity(shouldGoHome) = val);
end;

function toRightCity;
var
  currentCity: TCity;
begin
  if isRightCity(val) then
  begin
    Result := true;
    exit;
  end;

  if not isRightCity(val) then
  begin

    currentCity := GetCity;

    if currentCity = NON_CITY then
      GoHome;

    DoTeleport(CityNames[val]);  //replace

  end;

  delay(100);
  Result := toRightCity(val);

end;

function inStartLoc;
begin
  Result :=
  (inRange(User, -124776, 38104, 1208, 2000) //kamael
   or inRange(User, -71338, 258271, -3088, 2000) //human fight
   or inRange(User, -90890, 248027, -3570, 2000) //human mage
   or inRange(User, 45978, 41196, -3440, 2000) //elves
   or inRange(User, 28377, 10916, -4224, 2000) //dark elves
   or inRange(User, -56693, -113610, -690, 2000) //orc
   or inRange(User, 108516, -174026, -400, 2000) //dwarves
  );
end;

function getNewbieBuffer;
var
	i: integer;
begin
	for i:=0 to 8 do
	begin
		if NpcList.ByID(nbArr[i], Result) then
			exit;
	end;
	Result := nil;
end;

function getSupplyManager;
var
	i: integer;
begin
	for i:=0 to 16 do
	begin
		if NpcList.ByID(spArr[i], Result) then
			exit;
	end;
	Result := nil;
end;

procedure initBuffPathArrays;
begin
	SetLength(talkingIslandToBuffer, 4, 3);
	SetLength(heineToBuffer, 6, 3);
	SetLength(dionToBuffer, 2, 3);
	SetLength(giranToBuffer, 2, 3);
	SetLength(adenToBuffer, 2, 3);
	SetLength(goddardToBuffer, 2, 3);
	SetLength(gludioToBuffer, 2, 3);
	SetLength(gludinToBuffer, 2, 3);
	SetLength(shtuttgartToBuffer, 2, 3);
	SetLength(runeToBuffer, 3, 3);
	SetLength(orenToBuffer, 2, 3);
	SetLength(kamaelToBuffer, 2, 3);

	writeToArray(talkingIslandToBuffer[0], -84168, 244568, -3712);
	writeToArray(talkingIslandToBuffer[1], -84584, 244008, -3712);
	writeToArray(talkingIslandToBuffer[2], -84104, 243528, -3712);
	writeToArray(talkingIslandToBuffer[3], -84072, 243288, -3712);

	writeToArray(heineToBuffer[0], 111387,219387,-3544);
	writeToArray(heineToBuffer[1], 111250,219358,-3516);
	writeToArray(heineToBuffer[2], 111267,219361,-3516);
	writeToArray(heineToBuffer[3], 111218,219438,-3532);
	writeToArray(heineToBuffer[4], 111158,219756,-3673);
	writeToArray(heineToBuffer[5], 111188,220978,-3544);

	writeToArray(dionToBuffer[0], 15628,142920,-2704);
	writeToArray(dionToBuffer[1], 16754,142947,-2717);

	writeToArray(giranToBuffer[0], 83405,147953,-3403);
	writeToArray(giranToBuffer[1], 83261,148847,-3403);

	writeToArray(adenToBuffer[0], 146771,25813,-2011);
	writeToArray(adenToBuffer[1], 147128,25924,-2011);

	writeToArray(goddardToBuffer[0], 147969,-55264,-2732);
	writeToArray(goddardToBuffer[1], 148064,-55368,-2732);

	writeToArray(gludioToBuffer[0], -14504,124036,-3124);
	writeToArray(gludioToBuffer[1], -14728,124023,-3122);

	writeToArray(gludinToBuffer[0], -81073,150110,-3042);
	writeToArray(gludinToBuffer[1], -81603,150204,-3127);

	writeToArray(shtuttgartToBuffer[0], 87061,-143441,-1290);
	writeToArray(shtuttgartToBuffer[1], 87015,-143349,-1290);

	writeToArray(runeToBuffer[0], 43827,-47698,-794);
	writeToArray(runeToBuffer[1], 43606,-47837,-795);
	writeToArray(runeToBuffer[2], 43530,-47561,-795);

	writeToArray(orenToBuffer[0], 82965,53174,-1494);
	writeToArray(orenToBuffer[1], 82397,53295,-1494);

	writeToArray(kamaelToBuffer[0], -119384,46840,368);
	writeToArray(kamaelToBuffer[1], -119608,44888,368);

	SetLength(giranToWeaponShop, 7, 3);
	SetLength(giranToArmorShop, 7, 3);
	SetLength(giranToAccessoryShop, 6, 3);
	
	writeToArray(giranToWeaponShop[0], 82618, 148244, -3416);
	writeToArray(giranToWeaponShop[1], 81416, 148264, -3456);
	writeToArray(giranToWeaponShop[2], 80728, 148600, -3448);
	writeToArray(giranToWeaponShop[3], 79816, 148568, -3520);
	writeToArray(giranToWeaponShop[4], 79848, 147592, -3520);
	writeToArray(giranToWeaponShop[5], 80088, 146712, -3504);
	writeToArray(giranToWeaponShop[6], 79800, 146568, -3504);
	
	writeToArray(giranToArmorShop[0], 81528, 148328, -3456);
	writeToArray(giranToArmorShop[1], 80696, 148600, -3448);
	writeToArray(giranToArmorShop[2], 79800, 148648, -3520);
	writeToArray(giranToArmorShop[3], 79816, 149464, -3520);
	writeToArray(giranToArmorShop[4], 79576, 150088, -3520);
	writeToArray(giranToArmorShop[5], 79592, 150632, -3504);
	writeToArray(giranToArmorShop[6], 79672, 150712, -3496);
	
	writeToArray(giranToAccessoryShop[0], 81528, 148328, -3456);
	writeToArray(giranToAccessoryShop[1], 80696, 148600, -3448);
	writeToArray(giranToAccessoryShop[2], 79800, 148648, -3520);
	writeToArray(giranToAccessoryShop[3], 79816, 149464, -3520);
	writeToArray(giranToAccessoryShop[4], 80136, 149448, -3488);
	writeToArray(giranToAccessoryShop[5], 80408, 149240, -3488);
	
	
	SetLength(talkingIslandToSupply, 9, 3);
	SetLength(heineToSupply, 9, 3);
	SetLength(dionToSupply, 9, 3);
	SetLength(giranToSupply, 9, 3);
	SetLength(adenToSupply, 9, 3);
	SetLength(goddardToSupply, 9, 3);
	SetLength(gludioToSupply, 9, 3);
	SetLength(gludinToSupply, 9, 3);
	SetLength(shtuttgartToSupply, 9, 3);
	SetLength(runeToSupply, 9, 3);
	SetLength(orenToSupply, 9, 3);
	SetLength(kamaelToSupply, 5, 3);
	
	
	writeToArray(talkingIslandToSupply[0], -84376, 244360, -3712);
	writeToArray(talkingIslandToSupply[1], -84536, 243992, -3712);
	writeToArray(talkingIslandToSupply[2], -83944, 243416, -3712);
	writeToArray(talkingIslandToSupply[3], -83992, 242664, -3712);
	writeToArray(talkingIslandToSupply[4], -84792, 241896, -3712);
	writeToArray(talkingIslandToSupply[5], -84408, 241192, -3712);
	writeToArray(talkingIslandToSupply[6], -84616, 240904, -3712);
	writeToArray(talkingIslandToSupply[7], -84264, 240664, -3704);
	writeToArray(talkingIslandToSupply[8], -84232, 240504, -3704);
	
	writeToArray(heineToSupply[0], -84376, 244360, -3712);
	writeToArray(heineToSupply[1], -84536, 243992, -3712);
	writeToArray(heineToSupply[2], -83944, 243416, -3712);
	writeToArray(heineToSupply[3], -83992, 242664, -3712);
	writeToArray(heineToSupply[4], -84792, 241896, -3712);
	writeToArray(heineToSupply[5], -84408, 241192, -3712);
	writeToArray(heineToSupply[6], -84616, 240904, -3712);
	writeToArray(heineToSupply[7], -84264, 240664, -3704);
	writeToArray(heineToSupply[8], -84232, 240504, -3704);
	
	writeToArray(dionToSupply[0], -84376, 244360, -3712);
	writeToArray(dionToSupply[1], -84536, 243992, -3712);
	writeToArray(dionToSupply[2], -83944, 243416, -3712);
	writeToArray(dionToSupply[3], -83992, 242664, -3712);
	writeToArray(dionToSupply[4], -84792, 241896, -3712);
	writeToArray(dionToSupply[5], -84408, 241192, -3712);
	writeToArray(dionToSupply[6], -84616, 240904, -3712);
	writeToArray(dionToSupply[7], -84264, 240664, -3704);
	writeToArray(dionToSupply[8], -84232, 240504, -3704);
	
	writeToArray(giranToSupply[0], -84376, 244360, -3712);
	writeToArray(giranToSupply[1], -84536, 243992, -3712);
	writeToArray(giranToSupply[2], -83944, 243416, -3712);
	writeToArray(giranToSupply[3], -83992, 242664, -3712);
	writeToArray(giranToSupply[4], -84792, 241896, -3712);
	writeToArray(giranToSupply[5], -84408, 241192, -3712);
	writeToArray(giranToSupply[6], -84616, 240904, -3712);
	writeToArray(giranToSupply[7], -84264, 240664, -3704);
	writeToArray(giranToSupply[8], -84232, 240504, -3704);
	
	writeToArray(adenToSupply[0], -84376, 244360, -3712);
	writeToArray(adenToSupply[1], -84536, 243992, -3712);
	writeToArray(adenToSupply[2], -83944, 243416, -3712);
	writeToArray(adenToSupply[3], -83992, 242664, -3712);
	writeToArray(adenToSupply[4], -84792, 241896, -3712);
	writeToArray(adenToSupply[5], -84408, 241192, -3712);
	writeToArray(adenToSupply[6], -84616, 240904, -3712);
	writeToArray(adenToSupply[7], -84264, 240664, -3704);
	writeToArray(adenToSupply[8], -84232, 240504, -3704);
	
	writeToArray(goddardToSupply[0], -84376, 244360, -3712);
	writeToArray(goddardToSupply[1], -84536, 243992, -3712);
	writeToArray(goddardToSupply[2], -83944, 243416, -3712);
	writeToArray(goddardToSupply[3], -83992, 242664, -3712);
	writeToArray(goddardToSupply[4], -84792, 241896, -3712);
	writeToArray(goddardToSupply[5], -84408, 241192, -3712);
	writeToArray(goddardToSupply[6], -84616, 240904, -3712);
	writeToArray(goddardToSupply[7], -84264, 240664, -3704);
	writeToArray(goddardToSupply[8], -84232, 240504, -3704);
	
	writeToArray(gludioToSupply[0], -84376, 244360, -3712);
	writeToArray(gludioToSupply[1], -84536, 243992, -3712);
	writeToArray(gludioToSupply[2], -83944, 243416, -3712);
	writeToArray(gludioToSupply[3], -83992, 242664, -3712);
	writeToArray(gludioToSupply[4], -84792, 241896, -3712);
	writeToArray(gludioToSupply[5], -84408, 241192, -3712);
	writeToArray(gludioToSupply[6], -84616, 240904, -3712);
	writeToArray(gludioToSupply[7], -84264, 240664, -3704);
	writeToArray(gludioToSupply[8], -84232, 240504, -3704);
	
	writeToArray(kamaelToSupply[0], -118968, 45896, 352);
	writeToArray(kamaelToSupply[1], -117608, 46696, 368);
	writeToArray(kamaelToSupply[2], -117320, 47480, 464);
	writeToArray(kamaelToSupply[3], -117160, 47560, 456);
	writeToArray(kamaelToSupply[4], -117128, 47976, 472);
	
end;

procedure GetBuff;
var
  City: TCity;
  Item : TL2Item;
  stringIndex: integer;
  i: integer;
begin
	City := GetCity;
	case City of
		TALKING_ISLAND: moveToLoc(talkingIslandToBuffer);
		HEINE : moveToLoc(heineToBuffer);
		DION : moveToLoc(dionToBuffer);
		GIRAN : moveToLoc(giranToBuffer);
		ADEN : moveToLoc(adenToBuffer);
		GODDARD : moveToLoc(goddardToBuffer);
		GLUDIO : moveToLoc(gludioToBuffer);
		GLUDIN : moveToLoc(gludinToBuffer);
		SHTUTTGART : moveToLoc(shtuttgartToBuffer);
		RUNE : moveToLoc(runeToBuffer);
		OREN : moveToLoc(orenToBuffer);
		KAMAEL : moveToLoc(kamaelToBuffer);
	end;

	if getNewbieBuffer = nil then
	begin
		print('Newbie buffer not found..');
		exit;
	end;

	if ((getNewbieBuffer.ID >= 30598) and (getNewbieBuffer.ID <= 30602)) or (getNewbieBuffer.ID = 32135) then
		stringIndex := 2 //in HF 5
	else
		stringIndex := 1;

	Engine.MoveTo(getNewbieBuffer);
	Engine.SetTarget(getNewbieBuffer);
	Engine.DlgOpen;
	delay(500);
	Engine.DlgSel(stringIndex);
	delay(500);
	Engine.DlgSel(1);

	delay(200);

	if User.Level <= 39 then begin
		Engine.DlgOpen;
		Engine.DlgSel(3);
		Engine.DlgSel(1);
	end;
end;

procedure GetSupplies;
var
  City: TCity;
  Item : TL2Item;
  stringIndex: integer;
  i: integer;
begin
	City := GetCity;
	{DWARVEN, ORC, DARK_ELVEN, ELVEN, KAMAEL,
	TALKING_ISLAND, HEINE, DION, GIRAN, ADEN, GODDARD,
	GLUDIO, GLUDIN, SHTUTTGART, RUNE, OREN, HUNTER, NON_CITY}
	//Тут кусок кода по городам... Путь от телепорта до баффера.
	case City of
		TALKING_ISLAND: moveToLoc(talkingIslandToSupply);
		HEINE : moveToLoc(heineToSupply);
		DION : moveToLoc(dionToSupply);
		GIRAN : moveToLoc(giranToSupply);
		ADEN : moveToLoc(adenToSupply);
		GODDARD : moveToLoc(goddardToSupply);
		GLUDIO : moveToLoc(gludioToSupply);
		GLUDIN : moveToLoc(gludinToSupply);
		SHTUTTGART : moveToLoc(shtuttgartToSupply);
		RUNE : moveToLoc(runeToSupply);
		OREN : moveToLoc(orenToSupply);
		KAMAEL : moveToLoc(kamaelToSupply);
	end;
	//Конец куска

	//Сам бафф ;)
	if getSupplyManager = nil then
	begin
		print('Supply manager not found..');
		exit;
	end;
	
	Engine.MoveTo(getSupplyManager);
	Engine.SetTarget(getSupplyManager);
	Engine.DlgOpen;
	delay(500);
	Engine.DlgSel(1);

	delay(200);
end;

function getNewbieQuest;
var
  City: TCity;
  stringIndex: integer;
  i: integer;
begin
	City := GetCity;
	//Тут кусок кода по городам... Путь от телепорта до баффера.
	//talking island
	case City of
		TALKING_ISLAND: moveToLoc(talkingIslandToBuffer);
		HEINE : moveToLoc(heineToBuffer);
		DION : moveToLoc(dionToBuffer);
		giran : moveToLoc(giranToBuffer);
		ADEN : moveToLoc(adenToBuffer);
		GODDARD : moveToLoc(goddardToBuffer);
		GLUDIO : moveToLoc(gludioToBuffer);
		GLUDIN : moveToLoc(gludinToBuffer);
		SHTUTTGART : moveToLoc(shtuttgartToBuffer);
		RUNE : moveToLoc(runeToBuffer);
		OREN : moveToLoc(orenToBuffer);
		KAMAEL : moveToLoc(kamaelToBuffer);
	end;
	//Конец куска

	if getNewbieBuffer = nil then
	begin
		print('Newbie buffer not found..');
		Result := false;
		exit;
	end;

	Engine.SetTarget(getNewbieBuffer);
	Engine.DlgOpen;

	delay(200);
	Result := true;

end;

begin
end.