uses SettingsModule, Classes, TeleportModule, Locations, UserFunctions, LevelPet;

{
--------------------------------------------------------------------------------
  SEARCH FRASE "CHANGE THIS" IN FILE AND MAKE THE PERTINENT CHANGES
--------------------------------------------------------------------------------
}
type
  TClassType = record
    isMage: boolean;
    secondClass: TSecondClass;
  end;

const
  HIRA = 31613;          // YOU HAVE TO CHANGE THIS TO YOUR SERVER CUSTOM BUFFER. IF THERE'S NONE THEN DELETE BUFFING LINE NEAR THE END OF THE SCRIPT
  NOVA = 31124;          // YOU HAVE TO CHANGE THIS TO YOUR SERVER CUSTOM GATEKEEPER. IF THERE'S NONE CONFIGURE THE TELEPORT FUNCTION TO USE THE USUAL GATEKEEPER.
  WIND_WALK = 1204;      // YOU MAY HAVE TO CHANGE THIS TO A BUFF YOU USE. IT'S USED TO KNOW WHEN YOU NEED TO BACK WHEN YOU'R BUFFS FINISH
  SCROLL_OF_SCAPE = 736;

{
--------------------------------------------------------------------------------
  Check if the server is locked by trying to move the character.
  If the character didn't move then unlock the server.
--------------------------------------------------------------------------------
}
procedure unlockServer;
var
  pin: Integer;
  Moved: Boolean;
  lastX: Integer;
  newX: Integer;
begin
  Delay (3000); // Wait 3s for the server to load
  lastX := User.X;
  newX  := User.X + 5;
  Engine.MoveTo(newX, User.Y, User.Z);
  if User.InRange(newX, User.Y, User.z, 3, 10) then Moved := true;

  // If it didn't moved it is locked
  if not Moved then
  begin
    //pin := xxxxxx; // TODO: add configuration for pin
    //Engine.BypassToServer('custom_pin_unlock ' + IntToStr(pin));
  end;
end;

{
--------------------------------------------------------------------------------
  Different ways to return home
--------------------------------------------------------------------------------
}
procedure Unstuck;
begin
  //Engine.GoHome(rtclanhall);     // When you die go to clan hall
  Engine.UseItem(SCROLL_OF_SCAPE);
  //Engine.EnterText('/unstuck');  // To enter '/ustuck' in chat window
  Unstuck; // It appears in the script guide but doesn't work
end;

{
--------------------------------------------------------------------------------
  Check if the character is dead and go to village
--------------------------------------------------------------------------------
}
function isDead: boolean;
begin
  isDead := false;
  if User.Dead then
  begin
    Delay(10000); // In case of resurrection
  end;
  if User.Dead then
  begin
    isDead := true;
    Engine.FaceControl(0,false);
    Print('Dead. Pressing to village.');
    Engine.GoHome;
    Delay(5000);
    InFight := false;
  end;
end;

{
--------------------------------------------------------------------------------
  Check if the character needs buffs
--------------------------------------------------------------------------------
}
function needsBuffs: boolean;
var
  buff: TL2Buff;
begin
  needsBuffs := false;
  // check for any buff that you use
  if  not User.Buffs.ByID(WIND_WALK, Buff)  or
    User.Buffs.ById(WIND_WALK, buff)  and  (buff.EndTime < 60 * 1000)  then
  begin
    needsBuffs := true;
  end;
end;

{
--------------------------------------------------------------------------------
  Buffs in the server custom's buffer
  YOU MAY WANT TO CHANGE THIS
--------------------------------------------------------------------------------
}
procedure buffing;
begin
  Print('Buffing...');
  Engine.SetTarget(HIRA); // NPC ID
  Engine.MoveToTarget;
  Delay(500);
  Engine.DlgOpen;
  Delay(500);
  Engine.DlgSel(1);   //Open buffs
  Delay(500);
  {
    YOU MAY HAVE TO CHANGE THIS
  }
  if  isMage  then
    Engine.BypassToServer ('Quest 9999_NPCBuffer 108')
  else
    Engine.BypassToServer ('Quest 9999_NPCBuffer 107');   //Fighter buffs
  Delay(500);
  Engine.BypassToServer('Quest 9999_NPCBuffer 115');   //Heal
  Delay(500);
  Print('Buffed.');
end;

{
--------------------------------------------------------------------------------
  Make the necessary commands to teleport to the desired location
  YOU MAY WANT TO CHANGE THIS
  TODO: CREATE ARRAY OF HUNTING GROUND LOCATIONS
--------------------------------------------------------------------------------
}{
procedure teleport;
begin
  
end;}

{
--------------------------------------------------------------------------------
  YOU MAY WANT TO CHANGE THIS
  Make the necessary move commands to arrive to the desired location
  TODO: CREATE ARRAY OF HUNTING GROUND LOCATIONS
--------------------------------------------------------------------------------
}
procedure moveToHuntingGround;
begin
  Ketra;
end;

{
--------------------------------------------------------------------------------
  Whenever the character dies, needs buffs or isn't in combat it goes to village,
  buffs, teleports and move to the desired hunting ground
--------------------------------------------------------------------------------
}
procedure continueFarming;
begin
  inFight := false;
  unlockServer;
  while true do
  begin
    if isDead or needsBuffs or not inFight then
    begin
      Engine.FaceControl(0,false); // turn off bot interface
      moveInCity;
      buffing; // always buff. Don't check if buffs needed
      //teleport;
      moveToHuntingGround;
      Print('Finished');
    end;
  end;
end;

{
--------------------------------------------------------------------------------
  Counts the number of mobs that are attacking you
--------------------------------------------------------------------------------
}
function countAggroMobsOnUser: Array of TL2Live;
var
  i: Integer;
begin
  SetLength (Result, 0);
  for  i := 0  to  NpcList.Count-1  do
  begin
    {
      If the mob is targeting the character and the mob isn't dead and the mob
      exists, then add the mob to the array of mobs.
    }
    if (NpcList.Items(i).Target = User)  and  not NpcList.Items(i).Dead  and
       (NpcList.Items(i) <> nil)  then
    begin
      SetLength(Result, Length(Result) + 1);
      Result[Length(Result)-1] := NpcList.Items(i);
    end;
  end;
end;
{
--------------------------------------------------------------------------------
  Kills the mobs that are attacking you.
--------------------------------------------------------------------------------
}
procedure killAggroMobs(mobsArray : Array of TL2Live);
var
  i: Integer;
begin
  for  i := 0  to  Length(mobsArray)-1  do
  begin
    if  mobsArray[i].Dead  and  not User.Dead  then continue;

    while  not mobsArray[i].Dead  and  not User.Dead  do
    begin
      Engine.SetTarget(mobsArray[i]);
      Engine.Attack;
      {
        if  isMage1  then
        begin
          Engine.UseSkill(1177); // TODO: Change for skill name
        end;
        if  not isMage1  then
        begin
          Engine.Attack;
        end;
      }
    end;
  end;
end;
{
--------------------------------------------------------------------------------
  Checks the number of mobs that are attacking you and kills them if the number
  is greater than zero
--------------------------------------------------------------------------------
}
procedure killAgroMobsThread;
var
  mobsArray: Array of TL2Live;
begin
  while Engine.Status = lsOnline do
  begin
    mobsArray := countAggroMobsOnUser;
    if Length(mobsArray) > 0 then
    begin
      killAggroMobs(mobsArray);
    end;
  Delay(500);
  end;
end;

{
  When a tutorialwindow appears asking for captcha it plays a sound
}{
procedure checkForCaptcha;
begin
  while Engine.Status = lsOnline do
  begin
    if Engine.tutorialwindow then
    begin
      //PlaySound(exepath+'\sounds\'+'PlayerAlarm'+'.wav');
      PlaySound(exepath+'beep.wav');
    end;
    Delay(30*10000);
  end;
end;}

BEGIN
  Script.NewThread(@continueFarming);
  Script.NewThread(@killAgroMobsThread);
  script.newThread(@petHeal);
  script.newThread(@petRangeProtect);
  script.newThread(@tpContoller);
  //Script.NewThread(@checkForCaptcha);
END.